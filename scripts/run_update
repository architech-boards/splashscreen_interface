#!/bin/bash

OWNER=${1}
PARTNER_ALIAS=""
BOARD_ALIAS=""
ROOT_DIRECTORY=`pwd`
BASEROOT_SDK=${ROOT_DIRECTORY}/../../${OWNER}

STRING_INTERNET_ERROR="Impossible to connect to internet, double check your Internet connection."
STRING_ARGS_ERROR="Parameters used unknown"

#######################################################################################################################
# Error message

function error_message()
{
    local ZENITY_INSTALLED
    ZENITY_INSTALLED=`dpkg-query -l | grep zenity-common |& awk -F" " '{ print $1 }'`

    if [ "${ZENITY_INSTALLED}" != "ii" ]
    then
    echo "${1}"
    else
    zenity --error --text "${1}"
    fi
}

function upgrade_message()
{
    local ZENITY_INSTALLED
    ZENITY_INSTALLED=`dpkg-query -l | grep zenity-common |& awk -F" " '{ print $1 }'`

    if [ "${ZENITY_INSTALLED}" != "ii" ]
    then
    echo "${1} [n/y]"
        read RISP
        if [ "${RISP}" != "y" ]
        then
            cd .
        else
            cd []
        fi
    else
    zenity --question --text "${1}"
    fi
}

#######################################################################################################################
# Update splashscreen target board

if [ "${OWNER}" == "architech" ]
then
    BOARD_ALIAS=${2}    
    cd ${BASEROOT_SDK}/${BOARD_ALIAS}/splashscreen
elif [ "${OWNER}" == "partners" ]
then
    PARTNER_ALIAS=${2}
    BOARD_ALIAS=${3}
    cd ${BASEROOT_SDK}/${PARTNER_ALIAS}/${BOARD_ALIAS}/splashscreen
else
    error_message "${STRING_ARGS_ERROR}"
    exit 2
fi

git pull
[ $? -eq 0 ] || { error_message "${STRING_INTERNET_ERROR}"; exit 1; }

#######################################################################################################################
# Change branch if necessary
BRANCH_MANIFEST=`grep -i "${BOARD_ALIAS}" ${BASEROOT_SDK}/../architech-manifest/${OWNER} | awk -F"|" '{print $3}'`
BRANCH_SPLASHSCREEN=`git branch | grep "*" | awk -F" " '{print $2}'`

if [ "${BRANCH_MANIFEST}" != "${BRANCH_SPLASHSCREEN}" ]
then
    upgrade_message "There is a important upgrade, it will changes the splashscreen from '${BRANCH_MANIFEST}' version to '${BRANCH_SPLASHSCREEN}' version.\nAll directories will be moved in a new directory named '${BRANCH_SPLASHSCREEN}'.\nSelect 'NO' if you wish upgrade to '${BRANCH_MANIFEST}' version later."
    [ $? -eq 1 ] || { git checkout -f ${BRANCH_MANIFEST}; mkdir ../${BRANCH_SPLASHSCREEN}; find ../ -maxdepth 1 -mindepth 1 -not -name "splashscreen" -exec mv '{}' ../${BRANCH_SPLASHSCREEN} \;; }
fi

#######################################################################################################################
# Update target board

gnome-terminal --disable-factory -t ${BOARD_ALIAS} -e 'bash -c "./run_install"';

exit $?
